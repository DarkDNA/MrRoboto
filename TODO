=== BUGS and other nasty stuff ===


**** After Caius looked at it, it seems to be an issue with more than one ":" in a line, and later on after the stuff is read, i split at the ":". To fix one option would be to read the entire MOTD fisrt, join a channel, and THEN begin parsing

	- we fixed it based on parsing on : , the freenode MOTD has multiple : in it so it was breaking parsing. Caius gave me a fix that split it on the 2nd : and ignored some stuff, and then only selected the 2nd element on. I'm still not 100% sure how this works, but at least it DOES work.. and i'm including a txt file of our conversation


- Nasty bug, when entering just ! it crashes the bot, most likely due to crappy parsing

/home/plazma/code/MrRoboto/MrRoboto-WIP.rb:62:in `parseStream': undefined method `strip' for nil:NilClass (NoMethodError)
        from /home/plazma/code/MrRoboto/MrRoboto-WIP.rb:108:in `eventHandler'
        from /home/plazma/code/MrRoboto/MrRoboto-WIP.rb:148:in `run'
        from main.rb:9:in `<main>'

-- POSSIBLE FIX: If first char in botCmd is ! and the next char is blank , also if 2nd char through last char is a ! . Once we check for that, that's when we determine if botCmd is set?


- Bug when QUIT (though command works)

- caius says to do instance variables and print htem to see what data is acutally being sent, also look into the inspect command as well as the .class

/home/plazma/code/MrRoboto/MrRoboto-WIP.rb:46:in `parseStream': undefined method `split' for nil:NilClass (NoMethodError)
        from /home/plazma/code/MrRoboto/MrRoboto-WIP.rb:108:in `eventHandler'
        from /home/plazma/code/MrRoboto/MrRoboto-WIP.rb:148:in `run'
        from main.rb:9:in `<main>'


==== FEATURES TO ADD

- Fix things to maybe use an array or return an array of parsed messages instead of having a that many instance variables.

- Allow commands to take arguments such as !beer <NICK>
	- parsing is now fixed and makes sure the command is first, so now we need to have everything after split correctly:
	- for !beer just 1 arg so it would take the next elemnt ONLY
		- if arg = nick then gives beer to nick
		- if arg = me , gives beer to self
		- if no arg , give beer to self
	
		- can do this with optional args or method(*args)
			- need to figure out if *args is really an array?

- add a hug command that takes 1 parameter (nick)

- figure out how to get with services and identify to nickserv and then fix auth system accordingly
	- do this on freenode with CAP identify-msg above OR you could /whois someone and parse

- on freenode, to work with nickserv to see if a user is identified you need to : You would send CAP REQ IDENTIFY-MSG   .. this prepends a + to the nick if identified


=== BUGS and other nasty stuff ===

	- still seems to be a big issue that some things received in the event are determined as
	a NilClass so when i try to pass split to it , it crashes

MrRoboto.rb:51:in `eventHandler': undefined method `split' for nil:NilClass (NoMethodError)
        from MrRoboto.rb:108:in `run'
        from MrRoboto.rb:126:in `<main>'

- Nasty bug, when entering just ! it crashes the bot, most likely due to crappy parsing

/home/plazma/code/MrRoboto/MrRoboto-WIP.rb:62:in `parseStream': undefined method `strip' for nil:NilClass (NoMethodError)
        from /home/plazma/code/MrRoboto/MrRoboto-WIP.rb:108:in `eventHandler'
        from /home/plazma/code/MrRoboto/MrRoboto-WIP.rb:148:in `run'
        from main.rb:9:in `<main>'


- Bug when QUIT (though command works)

/home/plazma/code/MrRoboto/MrRoboto-WIP.rb:46:in `parseStream': undefined method `split' for nil:NilClass (NoMethodError)
        from /home/plazma/code/MrRoboto/MrRoboto-WIP.rb:108:in `eventHandler'
        from /home/plazma/code/MrRoboto/MrRoboto-WIP.rb:148:in `run'
        from main.rb:9:in `<main>'


==== FEATURES TO ADD

- Fix things to maybe use an array or return an array of parsed messages instead of having a that many instance variables.

- Allow commands to take arguments such as !beer <NICK>
	- parsing is now fixed and makes sure the command is first, so now we need to have everything after split correctly:
	- for !beer just 1 arg so it would take the next elemnt ONLY
		- if arg = nick then gives beer to nick
		- if arg = me , gives beer to self
		- if no arg , give beer to self
	
		- can do this with optional args or method(*args)
			- need to figure out if *args is really an array?


- figure out how to get with services and identify to nickserv and then fix auth system accordingly
	- do this on freenode with CAP identify-msg above OR you could /whois someone and parse

- on freenode, to work with nickserv to see if a user is identified you need to : You would send CAP REQ IDENTIFY-MSG   .. this prepends a + to the nick if identified

